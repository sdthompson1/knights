/*
 * FILE:
 *   sdl_surface_from_pixels.cpp
 *
 * AUTHOR:
 *   Stephen Thompson <stephen@solarflare.org.uk>
 *
 * COPYRIGHT:
 *   Copyright (C) Stephen Thompson, 2008 - 2009.
 *
 *   This file is part of the "Coercri" software library. Usage of "Coercri"
 *   is permitted under the terms of the Boost Software License, Version 1.0,
 *   the text of which is displayed below.
 *
 *   Boost Software License - Version 1.0 - August 17th, 2003
 *
 *   Permission is hereby granted, free of charge, to any person or organization
 *   obtaining a copy of the software and accompanying documentation covered by
 *   this license (the "Software") to use, reproduce, display, distribute,
 *   execute, and transmit the Software, and to prepare derivative works of the
 *   Software, and to permit third-parties to whom the Software is furnished to
 *   do so, all subject to the following:
 *
 *   The copyright notices in the Software and this entire statement, including
 *   the above license grant, this restriction and the following disclaimer,
 *   must be included in all copies of the Software, in whole or in part, and
 *   all derivative works of the Software, unless such copies or derivative
 *   works are solely in the form of machine-executable object code generated by
 *   a source language processor.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 *   SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 *   FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *   DEALINGS IN THE SOFTWARE.
 *
 */

#include "delete_sdl_surface.hpp"
#include "sdl_surface_from_pixels.hpp"

#include "../../gfx/pixel_array.hpp"

boost::shared_ptr<SDL_Surface> Coercri::sdl_surface_from_pixels(const Coercri::PixelArray &pixels)
{
    boost::shared_ptr<SDL_Surface> surf(
        SDL_CreateRGBSurface(0,
                             pixels.getWidth(),
                             pixels.getHeight(),
                             32,
                             0xff000000,
                             0xff0000,
                             0xff00,
                             0xff),
        DeleteSDLSurface());

    SDL_LockSurface(surf.get());

    for (int y = 0; y < pixels.getHeight(); ++y) {
        for (int x = 0; x < pixels.getWidth(); ++x) {
            const Color &col = pixels(x, y);
            *((Uint32*)(surf->pixels) + y * surf->pitch / 4 + x) =
                SDL_MapRGBA(surf->format, col.r, col.g, col.b, col.a);
        }
    }

    SDL_UnlockSurface(surf.get());

    return surf;
}
