/*
 * FILE:
 *   sdl_subsystem_handle.hpp
 *
 * PURPOSE:
 *   RAII interface to initialization/shutdown of SDL and subsystems.
 *   Allows two different modules to use the same SDL subsystem
 *   without having to worry about it being deinitialized twice.
 *      
 * AUTHOR:
 *   Stephen Thompson
 *
 * COPYRIGHT:
 *   Copyright (C) Stephen Thompson, 2008 - 2009.
 *
 *   This file is part of the "Coercri" software library. Usage of "Coercri"
 *   is permitted under the terms of the Boost Software License, Version 1.0, 
 *   the text of which is displayed below.
 *
 *   Boost Software License - Version 1.0 - August 17th, 2003
 *
 *   Permission is hereby granted, free of charge, to any person or organization
 *   obtaining a copy of the software and accompanying documentation covered by
 *   this license (the "Software") to use, reproduce, display, distribute,
 *   execute, and transmit the Software, and to prepare derivative works of the
 *   Software, and to permit third-parties to whom the Software is furnished to
 *   do so, all subject to the following:
 *
 *   The copyright notices in the Software and this entire statement, including
 *   the above license grant, this restriction and the following disclaimer,
 *   must be included in all copies of the Software, in whole or in part, and
 *   all derivative works of the Software, unless such copies or derivative
 *   works are solely in the form of machine-executable object code generated by
 *   a source language processor.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 *   SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 *   FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *   DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef COERCRI_SDL_SUBSYSTEM_HANDLE_HPP
#define COERCRI_SDL_SUBSYSTEM_HANDLE_HPP

namespace Coercri {

    class SDLSubSystemHandle {
    public:
        // Ctor will automagically initialize SDL (if necessary) and
        // initialize the relevant subsystem (if it hasn't already
        // been initialized). s should be one of the SDL_INIT_* flags
        // (or 0 if we only want to initialize SDL itself, without
        // initializing a subsystem).
        // NOTE: do not combine together multiple flags -- subsystems
        // should be initialized one at a time.
        explicit SDLSubSystemHandle(unsigned int s);

        // Copy constructor, etc. (Uses reference counting)
        SDLSubSystemHandle(const SDLSubSystemHandle &);
        SDLSubSystemHandle & operator=(const SDLSubSystemHandle &);
        ~SDLSubSystemHandle();
        
    private:
        unsigned int subsys;
        int *ref_count;
    };

}

#endif
