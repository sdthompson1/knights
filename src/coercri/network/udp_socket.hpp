/*
 * FILE:
 *   udp_socket.hpp
 *
 * PURPOSE:
 *   Wrapper over UDP sockets. Supports both unicast and broadcast
 *   sending, and receiving.
 *
 * AUTHOR:
 *   Stephen Thompson
 *
 * CREATED:
 *   14-Nov-2008
 *
 * COPYRIGHT:
 *   Copyright (C) Stephen Thompson, 2008 - 2024.
 *
 *   This file is part of the "Coercri" software library. Usage of "Coercri"
 *   is permitted under the terms of the Boost Software License, Version 1.0, 
 *   the text of which is displayed below.
 *
 *   Boost Software License - Version 1.0 - August 17th, 2003
 *
 *   Permission is hereby granted, free of charge, to any person or organization
 *   obtaining a copy of the software and accompanying documentation covered by
 *   this license (the "Software") to use, reproduce, display, distribute,
 *   execute, and transmit the Software, and to prepare derivative works of the
 *   Software, and to permit third-parties to whom the Software is furnished to
 *   do so, all subject to the following:
 *
 *   The copyright notices in the Software and this entire statement, including
 *   the above license grant, this restriction and the following disclaimer,
 *   must be included in all copies of the Software, in whole or in part, and
 *   all derivative works of the Software, unless such copies or derivative
 *   works are solely in the form of machine-executable object code generated by
 *   a source language processor.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 *   SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 *   FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *   DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef COERCRI_UDP_SOCKET_HPP
#define COERCRI_UDP_SOCKET_HPP

#include "boost/noncopyable.hpp"

#include <string>

namespace Coercri {

    class UDPSocket : boost::noncopyable {
    public:
        // A UDPSocket can be bound or unbound. (See NetworkDriver::createUDPSocket.)
        //
        // The UDPSocket is assigned a local address (which is this machine's IP address) and a local port number.
        //
        // If the socket is bound, the local port number is specified when calling createUDPSocket. This means 
        // other machines can send to us on that port number (without having to receive anything from us first). 
        // This is useful for servers.
        //
        // If the socket is unbound, the local port number will be assigned by the system. This means other 
        // machines can only contact us if they have received a message from us beforehand (because there is no 
        // other way they will be able to find out the port number). This is useful for clients.

        virtual ~UDPSocket() { }

        // NOTE: Msgs are sent/received as strings. It might be better
        // to use vector<unsigned char> instead (for consistency with
        // NetworkConnection), but currently I think it's more
        // convenient to keep them as strings, because I am mostly
        // using the UDPSocket/TCPSocket classes for ASCII rather than
        // binary data at the moment...
        
        // Send a message to a specific address and port.
        virtual void send(const std::string &address, int port, const std::string &msg) = 0;
        
        // Broadcast a message to a given port.
        virtual void broadcast(int port, const std::string &msg) = 0;

        // Receive a message.
        // Returns the foreign address and foreign port number from which the message came. If you want to reply,
        // do a "send" back to that address and port number.
        virtual bool receive(std::string &address, int &port, std::string &msg) = 0;
    };

}

#endif
