/*
 * FILE:
 *   cg_input.hpp
 *
 * PURPOSE:
 *   Coercri implementation of gcn::Input. This just acts as a dumb
 *   container for Guichan KeyInputs and MouseInputs; these inputs are
 *   added by CGListener and removed by Guichan.
 *
 * AUTHOR:
 *   Stephen Thompson
 *
 * COPYRIGHT:
 *   Copyright (C) Stephen Thompson, 2008 - 2009.
 *
 *   This file is part of the "Coercri" software library. Usage of "Coercri"
 *   is permitted under the terms of the Boost Software License, Version 1.0, 
 *   the text of which is displayed below.
 *
 *   Boost Software License - Version 1.0 - August 17th, 2003
 *
 *   Permission is hereby granted, free of charge, to any person or organization
 *   obtaining a copy of the software and accompanying documentation covered by
 *   this license (the "Software") to use, reproduce, display, distribute,
 *   execute, and transmit the Software, and to prepare derivative works of the
 *   Software, and to permit third-parties to whom the Software is furnished to
 *   do so, all subject to the following:
 *
 *   The copyright notices in the Software and this entire statement, including
 *   the above license grant, this restriction and the following disclaimer,
 *   must be included in all copies of the Software, in whole or in part, and
 *   all derivative works of the Software, unless such copies or derivative
 *   works are solely in the form of machine-executable object code generated by
 *   a source language processor.
 *
 *   THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 *   IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 *   FITNESS FOR A PARTICULAR PURPOSE, TITLE AND NON-INFRINGEMENT. IN NO EVENT
 *   SHALL THE COPYRIGHT HOLDERS OR ANYONE DISTRIBUTING THE SOFTWARE BE LIABLE
 *   FOR ANY DAMAGES OR OTHER LIABILITY, WHETHER IN CONTRACT, TORT OR OTHERWISE,
 *   ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER
 *   DEALINGS IN THE SOFTWARE.
 *
 */

#ifndef COERCRI_CG_INPUT_HPP
#define COERCRI_CG_INPUT_HPP

#include "../gfx/window_listener.hpp"

#include "guichan.hpp"

#include "boost/shared_ptr.hpp"

namespace Coercri {

    class Timer;
    
    class CGInput : public gcn::Input {
    public:

        // Constructor requires a Timer -- this is for the timestamps
        // in the guichan MouseInputs (which are used to check for
        // double clicks).
        explicit CGInput(boost::shared_ptr<Timer> tmr) : timer(tmr) { }
        
        // Functions from gcn::Input
        virtual bool isKeyQueueEmpty();
        virtual gcn::KeyInput dequeueKeyInput();
        virtual bool isMouseQueueEmpty();
        virtual gcn::MouseInput dequeueMouseInput();
        virtual void _pollInput() { }

        // Functions to add inputs.
        void addKeyInput(const gcn::KeyInput &);
        void addMouseInput(const gcn::MouseInput &);

        // Check if any input is waiting
        bool inputWaiting() const;
        
    private:
        boost::shared_ptr<Timer> timer;
        std::queue<gcn::KeyInput> key_inputs;
        std::queue<gcn::MouseInput> mouse_inputs;
    };
}

#endif
